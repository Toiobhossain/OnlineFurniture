@using Vereyon.Web
@model SmartOnlineFurniture.Models.Registers

@{
    ViewBag.Title = "UserRegistration";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}
<div style="background-color:#e6ffe6;box-shadow: 2px 5px 15px 3px #888888;">
    <br />


    <div class="container form-horizontal" style="margin: auto;
    width: 75%;
    padding: 0px 10px;
    border: none;
    border-radius: 15px;
    background-color: #e6ffe6;
    box-shadow: 2px 5px 15px 3px #888888;">
        @using (Html.BeginForm("UserRegistration", "Home", FormMethod.Post, new { @enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()


            @Html.RenderFlashMessages()
            <h4>Registers</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control textboxdesign" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control textboxdesign" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control textboxdesign" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control textboxdesign" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.UserType, new SelectList(ViewBag.list), "Select User Type", htmlAttributes: new { @class = "form-control textboxdesign" })
                    @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control textboxdesign" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RePassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.RePassword, new { htmlAttributes = new { @class = "form-control textboxdesign" } })
                    @Html.ValidationMessageFor(model => model.RePassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserImage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    <input type="file" id="UserImage" name="UserImage" />
                    @Html.ValidationMessageFor(model => model.UserImage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="SIGN UP" class="btn btn-success" />
                </div>
            </div>
            <br />
            <br />



        }
    </div>

    <br />
</div>
@section scripts
{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}
